name: terraform-module-setup
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*'
defaults:
  run:
    shell: bash

env:
  AWS_DEFAULT_REGION: us-east-1
  TEST_FOLDER: test
  TF_VAR_DEV_ACCOUNT_ID: ${{ secrets.DEV_ACCOUNT_ID }}
  TF_VAR_PROD_ACCOUNT_ID: ${{ secrets.PROD_ACCOUNT_ID }}

jobs:
  security_check:
    runs-on: ubuntu-latest
    container: 
      image: sorinflueras96/terraform-cicd:lambdaguard
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate coverage reports
        run: |
          cd src
          coverage run --source=$GITHUB_WORKSPACE/src -m pytest && coverage xml
          coverage report -m
          sed -i 's/.*<source>.*/            <source>\/github\/workspace\/src<\/source>/' coverage.xml
          cp coverage.xml $GITHUB_WORKSPACE/coverage-reports/coverage.xml
      - name: Commit report
        run: |
          git config --global user.name 'SorinFlueras'
          git config --global user.email 'sorin.flueras@yahoo.com'
          git add $GITHUB_WORKSPACE/coverage-reports/coverage.xml
          git commit -am "Automated coverage report"
          git push
      - uses: sonarsource/sonarqube-scan-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Running Checkov
        run: checkov -d .

  deploy:
    # needs: [security_check]
    runs-on: ubuntu-latest
    container: 
      image: sorinflueras96/terraform-cicd:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # role-to-assume: arn:aws:iam::${{ secrets.DEV_ACCOUNT_ID }}:role/terraform-cicd-iam-role
          # role-session-name: cicd-session
          # role-duration-seconds: 3600
      - name: Download dependencies
        run: |
          cd ${{ env.TEST_FOLDER }}
          go mod download
      - name: Run tests
        run: |
          cd ${{ env.TEST_FOLDER }}
          go test -v .
